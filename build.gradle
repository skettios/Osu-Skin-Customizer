apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

sourceCompatibility = 1.6
sourceSets.main.java.srcDirs = [ "src/" ]

version = '0.1'
ext.mainClassName = "com.skettios.osc.Start"

repositories {
    mavenCentral()
}

dependencies {
    compile 'commons-io:commons-io:2.4'
    compile 'com.google.code.gson:gson:2.3.1'
}

task run(dependsOn: classes, type: JavaExec) {
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    ignoreExitValue = true
}

task dist(type: Jar) {
    delete("build/libs")
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
    from { configurations.compile.collect { zipTree(it) } }

    archiveName = "Osu-Skin-Customizer-${version}.jar"

    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}

build.dependsOn dist

eclipse {
    project {
        name = "Osu-Skin-Customizer"
    }
}

task afterEclipseImport(description: "Post processing after project generation", group: "IDE") {
    doLast {
        def classpath = new XmlParser().parse(file(".classpath"))
        new Node(classpath, "classpathentry", [ kind: 'src', path: 'assets' ]);
        def writer = new FileWriter(file(".classpath"))
        def printer = new XmlNodePrinter(new PrintWriter(writer))
        printer.setPreserveWhitespace(true)
        printer.print(classpath)
    }
}